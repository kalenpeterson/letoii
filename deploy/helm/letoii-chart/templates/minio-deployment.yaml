{{- if .Values.minio.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-minio
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-minio
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-minio
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-minio
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: minio
          image: "{{ .Values.minio.image.repository }}:{{ .Values.minio.image.tag }}"
          imagePullPolicy: {{ .Values.minio.image.pullPolicy }}
          args:
            - server
            - /data
            - --console-address
            - ":{{ .Values.minio.consoleService.port }}"
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-minio-creds
                  key: accessKey
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-minio-creds
                  key: secretKey
          ports:
            - name: api
              containerPort: {{ .Values.minio.service.port }}
            - name: console
              containerPort: {{ .Values.minio.consoleService.port }}
          resources:
            {{- toYaml .Values.minio.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          {{- if .Values.minio.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-minio
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- end }}