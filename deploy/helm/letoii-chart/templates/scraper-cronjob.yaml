apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-scraper
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-scraper
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  schedule: {{ .Values.scraper.schedule | quote }}
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ .Release.Name }}-scraper
            app.kubernetes.io/instance: {{ .Release.Name }}
        spec:
          restartPolicy: OnFailure
          containers:
            - name: scraper
              image: "{{ .Values.scraper.image.repository }}:{{ .Values.scraper.image.tag }}"
              imagePullPolicy: {{ .Values.scraper.image.pullPolicy }}
              resources:
                {{- toYaml .Values.scraper.resources | nindent 16 }}
              {{- if .Values.scraper.env }}
              env:
                {{- toYaml .Values.scraper.env | nindent 16 }}
              {{- end }}
              {{- if .Values.minio.enabled }}
              env:
                - name: MINIO_ENDPOINT
                  value: "{{ .Release.Name }}-minio:{{ .Values.minio.service.port }}"
                - name: MINIO_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Release.Name }}-minio-creds
                      key: accessKey
                - name: MINIO_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Release.Name }}-minio-creds
                      key: secretKey
              {{- end }}
              {{- if .Values.scraper.volumeMounts }}
              volumeMounts:
                {{- toYaml .Values.scraper.volumeMounts | nindent 16 }}
              {{- end }}
          {{- if .Values.scraper.volumes }}
          volumes:
            {{- toYaml .Values.scraper.volumes | nindent 12 }}
          {{- end }}